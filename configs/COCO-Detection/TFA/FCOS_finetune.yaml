MODEL:
  META_ARCHITECTURE: "MetaOneStageDetector"
  BACKBONE:
    NAME: "build_fcos_resnet_fpn_backbone"
    FREEZE: True # freeze backbone
  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  PROPOSAL_GENERATOR:
    NAME: "MetaFCOS"
    # freeze by components
    FREEZE_CLS_TOWER: True
    # bbox tower and branch TODO: convert to freeze box tower
    FREEZE_BBOX_BRANCH: True

  META_LEARN:
    EPISODIC_LEARNING: False # pretraining
  TFA:
    TRAIN_SHOT: 10
  FCOS:
    NUM_CLASSES: 80 #80
  # PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
DATASETS:
  # TRAIN: ("coco_pretrain_train_all",)
  # TEST: ("coco_pretrain_val_all", ) # "coco_pretrain_val_novel", )
  TRAIN: ("coco_pretrain_finetune_all",)
  TEST: ("coco_pretrain_val_all", ) # "coco_pretrain_val_novel", )
TEST:
  EVAL_PERIOD: 5000
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.001  # Note that RetinaNet uses a different default learning rate
  STEPS: (60000, 80000)
  MAX_ITER: 10 #30000
  # LR_MULTIPLIER_OVERWRITE, [{'backbone': 0.1}, {'reference_points': 0.1, 'sampling_offsets': 0.1}]
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
